/** O Comando "Help" envia uma mensagem de ajuda contendo as informa√ß√µes dos comandos. */

const { MessageEmbed } = require('discord.js');
require('dotenv').config();

module.exports = {

	run: (client, message) => {

		const sucess = new MessageEmbed()
			.setColor(process.env.COLOR)
			.setAuthor('Minha lista de comandos üí°')
			.setDescription(` ${message.author}, enviei meus comandos em seu privado!`)
			.setFooter('2020 ¬© Liga dos Programadores', process.env.SERVERIMAGE)
			.setTimestamp();
		message.channel.send(sucess);

		const embedList = new MessageEmbed()
			.setColor(process.env.COLOR)
			.setAuthor('Minha lista de comandos üí°')
			.setDescription('Para saber sobre cada um, reaja ao emoji de cada categoria.')
			.addField('üìã **Informa√ß√µes**', '*Comandos que mostram algumas informa√ß√µes importantes.*')
			.addField('üíª **Codando**', '*Comandos que auxiliam ao codificar.*')
			.addField('‚öôÔ∏è **√öteis**', '*Comandos que ajudam o servidor.*')
			.addField('üîí **Mod**', '*Comandos da staff.*')
			.setFooter('2020 ¬© Liga dos Programadores', process.env.SERVERIMAGE)
			.setTimestamp();

		message.author.send(embedList)
			.then(async msg => {
				await msg.react('üìã');
				await msg.react('üíª');
				await msg.react('‚öôÔ∏è');
				await msg.react('üîí');
				await msg.react('‚Ü©');

				const info = (reaction, user) => reaction.emoji.name === 'üìã';
				const codando = (reaction, user) => reaction.emoji.name === 'üíª';
				const uteis = (reaction, user) => reaction.emoji.name === '‚öôÔ∏è';
				const mod = (reaction, user) => reaction.emoji.name === 'üîπ';
				const back = (reaction, user) => reaction.emoji.name === 'üîô';

				const infoL = msg.createReactionCollector(info);
				const codandoL = msg.createReactionCollector(codando);
				const uteisL = msg.createReactionCollector(uteis);
				const modL = msg.createReactionCollector(mod);
				const backL = msg.createReactionCollector(back);

				backL.on('collect', () => {
					const embedBack = new MessageEmbed()
						.setColor(process.env.COLOR)
						.setAuthor('Minha lista de comandos üí°')
						.setDescription('Para saber sobre cada um, reaja ao emoji de cada categoria.')
						.addField('üìã **Informa√ß√µes**', '*Comandos que mostram algumas informa√ß√µes importantes.*')
						.addField('üíª **Codando**', '*Comandos que auxiliam ao codificar.*')
						.addField('‚öôÔ∏è **√öteis**', '*Comandos que ajudam o servidor.*')
						.addField('üîí **Mod**', '*Comandos da staff.*')
						.setFooter('2020 ¬© Liga dos Programadores', process.env.SERVERIMAGE)
						.setTimestamp();
					msg.edit(embedBack);

				});

				infoL.on('collect', () => {
					const embedInfo = new MessageEmbed()
						.setColor(process.env.COLOR)
						.setAuthor('Minha lista de comandos üí°')
						.setDescription(`‚≠ê **Info**
							!avatar - Exibe o avatar.
							!botinfo - Mostra informa√ß√µes do bot.
							!serverinfo - Mostra informa√ß√µes do servidor.
							!ping - Mostra lat√™ncia do bot.
							!invite - Mostra o rank de convites.
							!notify - Recebe o cargo novidades/ Remove o cargo.
							!userinfo - Mostra informa√ß√µes do usu√°rio.
						`)
						.setFooter('2020 ¬© Liga dos Programadores', process.env.SERVERIMAGE)
						.setTimestamp();
					msg.edit(embedInfo);
				});

				codandoL.on('collect', () => {
					const embedCod = new MessageEmbed()
						.setColor(process.env.COLOR)
						.setAuthor('Minha lista de comandos üí°')
						.setDescription(`‚≠ê **Info**
							!avatar - Exibe o avatar.
							!botinfo - Mostra informa√ß√µes do bot.
							!serverinfo - Mostra informa√ß√µes do servidor.
							!ping - Mostra lat√™ncia do bot.
							!invite - Mostra o rank de convites.
							!notify - Recebe o cargo novidades/ Remove o cargo.
							!userinfo - Mostra informa√ß√µes do usu√°rio.
						`)
						.setFooter('2020 ¬© Liga dos Programadores', process.env.SERVERIMAGE)
						.setTimestamp();
					msg.edit(embedCod);
				});

				uteisL.on('collect', () => {
					const embedUtil = new MessageEmbed()
						.setColor(process.env.COLOR)
						.setAuthor('Minha lista de comandos üí°')
						.setDescription(`‚≠ê **Info**
							!avatar - Exibe o avatar.
							!botinfo - Mostra informa√ß√µes do bot.
							!serverinfo - Mostra informa√ß√µes do servidor.
							!ping - Mostra lat√™ncia do bot.
							!invite - Mostra o rank de convites.
							!notify - Recebe o cargo novidades/ Remove o cargo.
							!userinfo - Mostra informa√ß√µes do usu√°rio.
						`)
						.setFooter('2020 ¬© Liga dos Programadores', process.env.SERVERIMAGE)
						.setTimestamp();
					msg.edit(embedUtil);
				});

				modL.on('collect', () => {
					const embedMod = new MessageEmbed()
						.setColor(process.env.COLOR)
						.setAuthor('Minha lista de comandos üí°')
						.setDescription(`‚≠ê **Info**
							!avatar - Exibe o avatar.
							!botinfo - Mostra informa√ß√µes do bot.
							!serverinfo - Mostra informa√ß√µes do servidor.
							!ping - Mostra lat√™ncia do bot.
							!invite - Mostra o rank de convites.
							!notify - Recebe o cargo novidades/ Remove o cargo.
							!userinfo - Mostra informa√ß√µes do usu√°rio.
						`)
						.setFooter('2020 ¬© Liga dos Programadores', process.env.SERVERIMAGE)
						.setTimestamp();
					msg.edit(embedMod);
				});
			})
			.catch(error => message.channel.send(error));
	},

	conf: {},

	help: {
		name: 'help',
		category: 'Ajuda',
		description: 'Mostra todos os comandos dispon√≠veis do bot.',
		usage: 'help',
	},
};